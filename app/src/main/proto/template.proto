syntax = "proto3";
package net.ixitxachitls.companion.proto;

import "value.proto";

message TemplateProto {
  string id = 1;
  string name = 2;
  repeated string base = 3;
  repeated string category = 4;
  repeated string synonym = 5;
  repeated ReferenceProto reference = 6;
  repeated string world = 7;
  string description = 8;
  string short_description = 9;
  string incomplete = 10;
  bool base_only = 11;
}

message WorldTemplateProto {
  TemplateProto template = 1;
  CalendarProto calendar = 2;

  message Names
  {
    string race = 1;
    string region = 2;
    repeated string male = 3;
    repeated string female = 4;
    repeated string surename = 5;
  }
  repeated Names names = 3;
}

message MonsterTemplateProto {
  TemplateProto template = 1;
  SizeProto size = 2;
  MonsterType type = 3;
  repeated MonsterSubtype subtype = 4;
  DiceProto hit_dice = 5;
  repeated SpeedProto speed = 6;
  ModifierProto natural_armor = 7;
  int32 base_attack = 8;

  message Abilities {
    int32 strength = 1;
    int32 dexterity = 2;
    int32 constitution = 3;
    int32 wisdom = 4;
    int32 intelligence = 5;
    int32 charisma = 6;
  }
  Abilities abilities = 9;

  message Saves {
    int32 fortitude = 1;
    int32 will = 2;
    int32 reflex = 3;
  }
  Saves saves = 10;

  message Attack {
    DiceProto attacks = 1;

    enum Mode {
      UNKNOWN_MODE = 0;
      TENTACLE = 1;
      CLAW = 2;
      BITE = 3;
      FIST = 4;
      QUILL = 5;
      WEAPON = 6;
      TOUCH = 7;
      INCORPOREAL_TOUCH = 8;
      SLAM = 9;
      STING = 10;
      SWARM = 11;
      RAY = 12;
      HOOF = 13;
      SNAKES = 14;
      WEB = 15;
    }
    Mode mode = 2;

    enum Style {
      UNKNOWN_STYLE = 0;
      MELEE = 1;
      RANGED = 2;
    }
    Style style = 3;
    DamageProto damage = 4;
  }
  repeated Attack primary_attack = 11;
  repeated Attack secondary_attack = 12;
  DistanceProto space = 13;
  DistanceProto reach = 14;
  repeated FeatSelection feat = 15;

  enum Climate {
    UNKNOWN_CLIMATE = 0;
    WARM = 1;
    COLD_CLIMATE = 2;
    ANY = 3;
    TEMPERATE = 4;
  }
  Climate climate = 16;

  enum Terrain {
    UNKNOWN_TERRAIN = 0;
    FOREST = 1;
    MARSH = 2;
    HILLS = 3;
    MOUNTAIN = 4;
    DESERT = 5;
    PLAINS = 6;
    AQUATIC_TERRAIN = 7;
    UNDERGROUND = 8;
    INFERNAL_BATTLEFIELD_OF_ACHERON = 9;
    INFINITE_LAYERS_OF_THE_ABYSS = 10;
    ELEMENTAL_PLANE_OF_AIR = 11;
    ELEMENTAL_PLANE_OF_EARTH = 12;
    ELEMENTAL_PLANE_OF_FIRE = 13;
    ELEMENTAL_PLANE_OF_WATER = 14;
    WINDSWEPT_DEPTHS_OF_PANDEMONIUM = 15;
    ANY_TERRAIN = 16;
  }
  Terrain terrain = 17;

  message Organization {
    enum Type {
      UNKNOWN = 0;
      ANY = 1;
      BAND = 2;
      BROOD = 3;
      COLONY = 4;
      COVEY = 5;
      FLIGHT = 6;
      FLOCK = 7;
      GANG = 8;
      HERD = 9;
      INFESTATION = 10;
      NEST = 11;
      PACK = 12;
      PAIR = 13;
      PATROL = 14;
      SLAVER_BROOD = 15;
      SOLITARY = 16;
      SQUAD = 17;
      STORM = 18;
      SWARM = 19;
      TANGLE = 20;
      TROUPE = 21;
      COMPANY = 22;
      DOMESTICATED = 23;
      WARBAND = 24;
      TRIBE = 25;
      HUNTING_PARTY = 26;
      RAIDING_PARTY = 27;
      TRADING_PARTY = 28;
      TEAM = 29;
      CLAN = 30;
      CLUTCH = 31;
    }
    Type type = 1;
    DiceProto number = 2;

    message Plus {
      DiceProto number = 1;
      string text = 2;
    }
    repeated Plus plus = 3;
  }
  repeated Organization organization = 18;
  RationalProto challenge_rating = 19;

  enum Treasure {
    UNKNOWN_TREADSURE = 0;
    NONE_TREASURE = 1;
    STANDARD = 2;
    DOUBLE = 3;
    TRIPLE = 4;
    QUADRUPLE = 5;
  }
  Treasure treasure = 20;
  Alignment alignment = 21;
  AlignmentStatus alignment_status = 22;

  message Advancement {
    RangeProto range = 1;
    SizeProto.Size size = 2;
  }
  repeated Advancement advancement = 23;

  int32 level_adjustment = 24;
  bool main_race = 25;

  message Language {
    enum Modifier {
      UNKNOWN_MODIFIER = 0;
      AUTOMATIC = 1;
      BONUS = 2;
      SOME = 3;
      UNDERSTAND = 4;
    }
    Modifier modifier = 1;

    enum Name {
      UNKNOWN_LANGUAGE = 0;
      ABOLETH = 1;
      ABYSSAL = 2;
      AQUAN = 3;
      AURAN = 4;
      CELESTIAL = 5;
      COMMON = 6;
      DRACONIC = 7;
      DROW_SIGN = 8;
      DRUIDIC = 9;
      DWARVEN = 10;
      ELVEN = 11;
      GIANT = 12;
      GNOME = 13;
      GOBLIN = 14;
      GNOLL = 15;
      HALFLING = 16;
      IGNAN = 17;
      INFERNAL = 18;
      KUO_TOA = 19;
      ORC = 20;
      SYLVAN = 21;
      TERRAN = 22;
      UNDERCOMMON = 23;
      NONE = 24;
      CHONDATHAN = 25;
      ILLUSKAN = 26;
    }
    Name name = 2;
  }
  repeated Language language = 26;

  string encounter = 27;
  string combat = 28;
  string tactics = 29;
  string character = 30;
  string reproduction = 31;

  message Possession {
    string name = 1;
    string text = 2;
    DiceProto count = 3;
  }
  repeated Possession possession = 32;

  repeated string proficiency = 33;
  bool quadruped = 34;

  repeated ParametrizedTemplateProto quality = 35;

  message Skill {
    string name = 1;
    int32 ranks = 2;
  }
  repeated Skill skill = 36;

  bool bonus_feat = 37;
  repeated FeatSelection automatic_feat = 38;
  int32 skill_point_bonus = 39;
  int32 skill_point_bonus_first_level = 40;
}

message ItemTemplateProto {
  TemplateProto template = 1;
  MoneyProto value = 2;
  WeightProto weight = 3;

  enum Probability {
    UNKNOWN = 0;
    COMMON = 1;
    UNCOMMON = 2;
    RARE = 3;
    VERY_RARE = 4;
    UNIQUE = 5;
  }
  Probability probability = 4;
  SizeProto size = 5;
  int32 hardness = 6;
  int32 hit_points = 7;

  message Appearance {
    Probability probability = 1;
    string appearance = 2;
  }
  repeated Appearance appearance = 8;

  message Substance {
    enum Material {
      UNKNOWN = 0;
      PAPER = 1;
      CLOTH = 2;
      ROPE = 3;
      GLASS = 4;
      ICE = 5;
      LEATHER = 6;
      HIDE = 7;
      WOOD = 8;
      STONE = 9;
      IRON = 10;
      STEEL = 11;
      CRYSTAL = 12;
      MITHRAL = 13;
      ADAMANTINE = 14;
      BONE = 15;
    }
    Material material = 1;
    DistanceProto thickness = 2;
  }
  Substance substance = 9;
  int32 break_dc = 10;
  string player_name = 11;
  bool monetary = 26;

  WeaponTemplateProto weapon = 12;
  WearableTemplateProto wearable = 13;
  IncompleteTemplateProto incomplete = 14;
  MagicTemplateProto magic = 15;
  CountedTemplateProto counted = 16;
  MultipleTemplateProto multiple = 17;
  MultiuseTemplateProto multiuse = 18;
  TimedTemplateProto timed = 19;
  CommodityTemplateProto commodity = 20;
  ContainerTemplateProto container = 21;
  ArmorTemplateProto armor = 22;
  LightTemplateProto light = 23;
  CompositeTemplateProto composite = 24;
  repeated ParametrizedTemplateProto qualities = 27;

  message Random {
    enum Type {
      UNKNOWN = 0;
      MUNDANE = 1;
    }
    Type type = 1;
    DiceProto multiple = 2;
    repeated string item = 3;
  }
  repeated Random random = 28;

  message Material {
    MoneyProto value = 1;
    enum ValueType {
      UNKNOWN = 0;
      PER_POUND = 1;
    }
    ValueType value_type = 2;
    int32 hp_per_inch = 3;
    RationalProto weight_multiplier = 4;
    RationalProto hp_multiplier = 5;
  }
  Material material = 29;
}

message ItemLookupProto {
  string name = 1;
  repeated string templates = 2;
  repeated string category_or = 3;
  MoneyProto value = 4;
  MoneyProto value_min = 5;
  MoneyProto value_max = 6;
  WeightProto weight_min = 7;
  WeightProto weight_max = 8;
  repeated SizeProto.Size size_or = 9;
  repeated ItemTemplateProto.Substance.Material material_or = 10;
  int32 hp = 11;
  string appearance = 12;
  string dm_notes = 13;
  int32 multiple = 14;
  int32 multiuse = 15;
  DurationProto time_left = 16;
  repeated ItemLookupProto content = 17;
}

message LevelTemplateProto {
  TemplateProto template = 1;
  string abbreviation = 2;
  string adventures = 3;
  string characteristics = 4;
  string alignment_options = 5;
  string religion = 6;
  string background = 7;
  string races = 8;
  string otherClasses = 9;
  string role = 10;
  string important_abilities = 11;
  repeated Alignment allowed_alignment = 12;
  DiceProto hit_dice = 13;
  int32 skill_points = 14;
  repeated string class_skill = 15;
  int32 class_skills_any = 16;
  repeated Proficiency weapon_proficiency = 17;
  repeated string individual_weapon_proficiency = 18;
  repeated ArmorType armor_proficiency = 19;
  repeated LeveledTemplateProto quality = 20;
  repeated int32 base_attack = 21;
  bool good_fortitude_save = 22;
  bool good_will_save = 23;
  bool good_reflex_save = 24;
  repeated LeveledTemplateProto bonus_feat = 25;
  Ability spell_ability = 26;

  message PerLevel {
    repeated int32 value = 1;
  }
  repeated PerLevel spells_per_day = 27;
  repeated PerLevel spells_known = 28;
  repeated string automatic_feat = 29;
  message Requirement {
    string description = 1;
  }
  repeated Requirement requirement = 30;
}

message QualityTemplateProto {
  TemplateProto template = 1;

  enum Type {
    UNKNOWN = 0;
    EXTRAORDINARY = 1;
    SPELL_LIKE = 2;
    SUPERNATURAL = 3;
  }
  Type type = 2;
  SpeedProto speed = 3;
  ExpressionProto speed_expression = 4;

  message AbilityModifier {
    Ability ability = 1;
    ModifierProto modifier = 2;
  }
  repeated AbilityModifier ability_modifier = 5;

  enum Immunity {
    UNKNOWN_IMMUNITY = 0;
    SLEEP_SPELLS = 1;
    SLEEP_EFFECTS = 2;
  }
  repeated Immunity immunity = 6;
  ModifierProto reflex_modifier = 7;
  ModifierProto will_modifier = 8;
  ModifierProto fortitude_modifier = 9;

  message KeyedModifier {
    string key = 1;
    ModifierProto modifier = 2;
  }
  repeated KeyedModifier skill_modifier = 10;
  ModifierProto attack_modifier = 11;
  ModifierProto damage_modifier = 12;
  repeated string bonus_feat = 13;
  string name_format = 14;
  ModifierProto ac_modifier = 15;
}

message ParametrizedTemplateProto {
  string name = 1;
  string title = 2;

  ParametersProto parameters = 3;
  int32 per_day = 4;
  ConditionalProto condition = 5;
}

message LeveledTemplateProto {
  int32 level = 1;
  ParametrizedTemplateProto template = 2;
}

message WeaponTemplateProto
{
  DamageProto damage = 1;
  DamageProto secondary_damage = 2;
  DamageProto splash = 3;

  enum Type
  {
    UNKNOWN = 0;
    PIERCING_OR_SLASHING = 1;
    BLUDGEONING_OR_PIERCING = 2;
    BLUDGEONING_AND_PIERCING = 3;
    SLASHING_OR_PIERCING = 4;
    SLASHING = 5;
    BLUDGEONING = 6;
    PIERCING = 7;
    GRENADE = 8;
    NONE = 9;
  }
  Type type = 4;
  CriticalProto critical = 5;
  WeaponStyle style = 6;
  Proficiency proficiency = 7;
  DistanceProto range = 8;
  DistanceProto reach = 9;
  int32 max_attacks = 10;
  bool finesse = 11;
  bool ammunition = 12;
  repeated string ammunition_needed = 13;
  SizeProto.Size wielder_size = 14;
}

message WearableTemplateProto
{
  enum Slot
  {
    UNKNOWN = 0;
    HEAD = 1;
    NECK = 2;
    TORSO = 3;
    BODY = 4;
    WAIST = 5;
    SHOULDERS = 6;
    HANDS = 7;
    HAND = 8;
    FINGER = 9;
    WRISTS = 10;
    FEET = 11;
    EYES = 12;
  }
  Slot slot = 1;
  RandomDurationProto wear = 2;
  RandomDurationProto wear_hastily = 3;
  RandomDurationProto remove = 4;
}

message IncompleteTemplateProto
{
  string text = 1;
}

message MagicTemplateProto
{
  enum Type
  {
    UNKNOWN = 0;
    STRENGTH = 1;
    DEXTERITY = 2;
    CONSTITUTION = 3;
    INTELLIGENCE = 4;
    WISDOM = 5;
    CHARISMA = 6;
    ATTACK = 7;
    DAMAGE = 8;
    ARMOR_CLASS = 9;
    HIDE = 10;
    MOVE_SILENTLY = 11;
  }

  message Modifier
  {
    Type type = 3;
    ModifierProto modifier = 2;
  }
  repeated Modifier modifier = 2;
}

message CountedTemplateProto
{
  int32 count = 1;

  enum Unit
  {
    UNKNOWN = 0;
    DAY = 1;
    PIECE = 2;
    SHEET = 3;
    USE = 4;
    PAGE = 5;
    CHARGE = 6;
    APPLICATION = 7;
    DAMAGE = 8;
  }
  Unit unit = 2;
}

message MultipleTemplateProto
{
  int32 count = 1;
  CountedTemplateProto.Unit unit = 2;
}

message MultiuseTemplateProto
{
  int32 count = 1;
}

message TimedTemplateProto
{
  RandomDurationProto duration = 1;
}

message CommodityTemplateProto
{
  AreaProto area = 1;
  DistanceProto length = 2;
}

message ContainerTemplateProto
{
  VolumeProto capacity = 1;

  enum State
  {
    UNKNOWN = 0;
    SOLID = 1;
    GRANULAR = 2;
    LIQUID = 3;
    GASEOUS = 4;
  }
  State state = 2;
  bool fixed_weight = 3;
}

message ArmorTemplateProto
{
  ModifierProto ac_bonus = 1;

  enum Type
  {
    UNKNOWN = 0;
    LIGHT = 1;
    MEDIUM = 2;
    HEAVY = 3;
    SHIELD = 4;
    TOWER_SHIELD = 5;
    NONE = 6;
  }
  Type type = 2;
  int32 max_dexterity = 3;
  int32 check_penalty = 4;
  int32 arcane_failure = 5;
  int32 speed_fast = 6;
  int32 speed_slow = 7;
}

message LightTemplateProto {
  message Light {
    DistanceProto distance = 1;

    enum Shape {
      UNKNOWN = 0;
      CONE = 1;
      CYLINDER = 2;
      LINE = 3;
      SPHERE = 4;
    }
    Shape shape = 2;
  }
  Light bright = 1;
  Light shadowy = 2;
}

message CompositeTemplateProto {
  message Or
  {
    repeated string name = 1;
  }
  repeated Or contains = 1;
}

message FeatTemplateProto {
  TemplateProto template = 1;
  FeatType type = 2;
  string benefit = 3;
  string special = 4;
  string normal = 5;
  string prerequisites = 6;

  ModifierProto attack_modifier = 8;
  ModifierProto damage_modifier = 9;
  int32 additional_attacks = 10;
  RestrictionProto condition = 11;
  ModifierProto initiative_modifier = 12;
  repeated NameAndModifierProto skill_modifier = 13;
  ModifierProto strength_modifier = 14;
  ModifierProto dexterity_modifier = 15;
  ModifierProto constitution_modifier = 16;
  ModifierProto intelligence_modifier = 17;
  ModifierProto wisdom_modifier = 18;
  ModifierProto charisma_modifier = 19;
  ModifierProto fortitude_modifier = 20;
  ModifierProto will_modifier = 21;
  ModifierProto reflex_modifier = 22;

  enum Qualifier {
    UNKNOWN = 0;
    NONE = 1;
    WEAPON = 2;
    SCHOOL = 3;
    SKILL = 4;
    SPELLS = 5;
  }
  Qualifier requires_qualifier = 23;
}

message MiniatureTemplateProto {
  TemplateProto template = 1;

  string set = 2;
  int32 number = 3;
  string number_affix = 4;
  string race = 5;
  string type = 6;
  repeated string subtype = 7;
  repeated string class = 8;
  SizeProto.Size size = 9;

  enum Rarity {
    UNKNOWN = 0;
    UNDEFINED = 1;
    COMMON = 2;
    UNCOMMON = 3;
    RARE = 4;
    ULTRA_RARE = 5;
    UNIQUE = 6;
    SPECIAL = 7;
  }
  Rarity rarity = 10;
}

message SkillTemplateProto {
  TemplateProto template = 1;

  Ability ability = 2;
  string check = 3;
  string action = 4;
  string retry = 5;
  string special = 6;
  string synergy_text = 7;
  string restriction_text = 8;
  string untrained = 9;

  enum Restriction
  {
    UNKNOWN_RESTRICTION = 0;
    TRAINED_ONLY = 1;
    ARMOR_CHECK_PENALTY = 2;
    SUBTYPE_ONLY = 3;
    DOUBLE_ARMOR_CHECK_PENALTY = 4;
  }
  repeated Restriction restriction = 10;

  enum Modifier
  {
    UNKNOWN_MODIFIER = 0;
    SPEED = 1;
    SIZE = 2;
  }
  repeated Modifier modifier = 11;

  message DC
  {
    int32 number = 1;
    string text = 2;
  }
  repeated DC dc = 12;

  message Synergy
  {
    string name = 1;
    string condition = 2;
  }
  repeated Synergy synergy = 13;
}

message SpellTemplateProto {
  TemplateProto template = 1;

  enum School
  {
    UNKNOWN_SCHOOL = 0;
    ABJURATION = 1;
    CONJURATION = 2;
    DIVINATION = 3;
    ENCHANTMENT = 4;
    EVOCATION = 5;
    ILLUSION = 6;
    NECROMANCY = 7;
    TRANSMUTATION = 8;
    UNIVERSAL = 9;
  }
  School school = 2;

  enum Subschool
  {
    UNKNOWN_SUBSCHOOL = 0;
    NONE = 1;
    CALLING = 2;
    CREATION_OR_CALLING = 3;
    CREATION = 4;
    HEALING = 5;
    SUMMONING = 6;
    TELEPORTATION = 7;
    SCRYING = 8;
    CHARM = 9;
    COMPULSION = 10;
    FIGMENT_OR_GLAMER = 11;
    FIGMENT = 12;
    GLAMER = 13;
    PATTERN = 14;
    PHANTASM = 15;
    SHADOW = 16;
  }
  repeated Subschool subschool = 3;
  string summary = 4;

  enum Descriptor
  {
    UNKNOWN_DESCRIPTOR = 0;
    ACID = 1;
    AIR = 2;
    CHAOTIC = 3;
    COLD = 4;
    DARKNESS = 5;
    DEATH = 6;
    EARTH = 7;
    ELECTRICITY = 8;
    EVIL = 9;
    FEAR = 10;
    FIRE_OR_COLD = 11;
    FIRE = 12;
    FORCE = 13;
    GOOD = 14;
    LANGUAGE_DEPENDENT = 15;
    LAWFUL = 16;
    LIGHT = 17;
    MIND_AFFECTING = 18;
    SCRYING_DESCRIPTOR = 19;
    SONIC = 20;
    WATER = 21;
    SEE_TEXT = 22;
  }
  repeated Descriptor descriptor = 5;

  message Level {
    SpellClass spell_class = 1;
    int32 level = 2;
  }
  repeated Level level = 6;

  enum Components
  {
    UNKNOWN_COMPONENT = 0;
    VERBOSE = 1;
    SOMATIC = 2;
    MATERIAL_DEVINE_FOCUS = 3;
    MATERIAL = 4;
    FOCUS_DIVINE_FOCUS = 5;
    FOCUS = 6;
    DIVINE_FOCUS = 7;
    EXPERIENCE_POINTS = 8;
  }
  repeated Components components = 7;

  message Material
  {
    string use = 1;
    repeated string component = 2;
  }
  repeated Material material = 8;
  Material focus = 9;
  DurationProto casting_time = 10;

  enum Range
  {
    UNKNOWN_RANGE = 0;
    PERSONAL_OR_TOUCH = 1;
    PERSONAL_AND_TOUCH = 2;
    PERSONAL_OR_CLOSE = 3;
    PERSONAL = 4;
    TOUCH = 5;
    CLOSE = 6;
    MEDIUM = 7;
    LONG = 8;
    UNLIMITED = 9;
    FOURTY_FEET_PER_LEVEL = 10;
    SEE_TEXT_RANGE = 11;
    ANYWHERE_WITHIN_AREA_WARDED = 12;
    ONE_MILE_PER_LEVEL = 13;
    UP_TO_TEN_FEET_PER_LEVEL = 14;
  }
  Range special_range = 11;
  DistanceProto range = 12;

  message Effect
  {
    DistanceProto distance = 1;

    enum Type
    {
      UNKNOWN = 0;
      RAY = 1;
      SPREAD = 2;
    }
    Type type = 2;
    string description = 3;
  }
  Effect effect = 13;
  string target = 14;
  string area = 15;

  message Duration
  {
    string duration_description = 1;
    DurationProto duration = 2;
    string levels = 3;
    DurationProto additional_duration = 4;
    string flags = 5;
    string description = 6;
  }
  Duration duration = 16;
  string saving_throw = 17;
  string spell_resistance = 18;
}

message AdventureTemplateProto {
  TemplateProto template = 1;
  message Level {
    int32 min = 1;
    int32 max = 2;
  }
  Level recommended_level = 4;

  message Encounter {
    string name = 1;
    repeated string base = 2;
    string short_name = 3;
    string description = 4;
    string short_description = 5;
    int32 encounter_level = 6;
    repeated string location = 7;

    message ReadAloud {
      string condition = 1;
      string text = 2;
    }
    repeated ReadAloud read_aloud = 8;

    message Environment {
      message Spot {
        string name = 1;
        string description = 2;

        message Check {
          string name = 1;
          int32 dc = 2;
          int32 modifier = 3;
          repeated string condition = 4;
        }
        repeated Check check = 3;
      }
      repeated Spot floor = 1;

      message Ceiling {
        string name = 1;
        string description = 2;
        int32 height_feet = 3;
        int32 min_height_feet = 4;
        int32 max_height_feet = 5;
      }
      repeated Ceiling ceiling = 2;

      repeated Spot walls = 3;

      message Door {
        string name = 1;
        string description = 2;
        int32 thickness_inches = 3;
        int32 hardness = 4;
        int32 hp = 5;
      }
      repeated Door door = 4;
      repeated Spot terrain = 5;
      repeated Spot trap = 6;
    }
    Environment environment = 9;

    message Senses {
      repeated string light = 1;
      repeated string sound = 2;
      repeated string smell = 3;
      repeated string touch = 4;
      repeated string feel = 5;
    }
    Senses senses = 10;

    message Creature {
      string name = 1;
      string reason = 2;
      repeated string tactics = 3;
    }
    repeated Creature creature = 11;

    repeated string development = 12;

    message Treasure {
      string name = 1;
      string description = 2;
      repeated ItemLookupProto item = 3;
    }
    repeated Treasure treasure = 13;

    message SpellGroup {
      string name = 1;
      string description = 2;
      int32 caster_level = 3;
      int32 ability_bonus = 4;
      SpellClass spell_class = 6;

      message SpellReference {
        string name = 1;
        repeated MetaMagic meta_magic = 2;
      }
      repeated SpellReference spell = 5;
    }
    repeated SpellGroup spell_group = 14;
  }
  repeated Encounter encounter = 5;
}

message ProductTemplateProto {
  TemplateProto template = 1;
  string title = 2;
  string leader = 3;
  string subtitle = 4;
  string notes = 5;

  message Person
  {
    string name = 1;
    string job = 2;
  }
  repeated Person author = 6;
  repeated Person editor = 7;
  repeated Person cover = 8;
  repeated Person cartographer = 9;
  repeated Person illustrator = 10;
  repeated Person typographer = 11;
  repeated Person manager = 12;

  message Date
  {
    int32 year = 1;
    int32 month = 2; // January is 1, 0 is no month.
  }
  Date date = 13;

  message ISBN
  {
    string group = 1;
    string publisher = 2;
    string title = 3;
    int32 check = 4;
  }
  ISBN isbn = 14;

  message ISBN13
  {
    string group13 = 1;
    string group = 2;
    string publisher = 3;
    string title = 4;
    int32 check = 5;
  }
  ISBN13 isbn13 = 15;
  int32 pages = 16;

  enum System
  {
    UNKNOWN_SYSTEM = 0;
    NONE = 1;
    CHAINMAIL = 2;
    DND_1ST = 3;
    ADND_1ST = 4;
    ADND_2ND = 5;
    ADND_2ND_SAGA = 6;
    ADND_REVISED = 7;
    DND_3RD = 8;
    DND_3_5 = 9;
    DND_4 = 10;
    DND_NEXT = 11;
    DND_5E = 49;
    D20_MODERN = 12;
    D20_FUTUTRE = 13;
    D20 = 14;
    ALTERNITY = 15;
    AMAZING_ENGINE = 16;
    BLOOD_WARS = 17;
    CHAOSIUM = 18;
    DARK_HEAVEN = 19;
    DRAGON_DICE = 20;
    DRAGON_STRIKE = 21;
    DUEL_MASTER = 22;
    ENDLESS_QUEST = 23;
    FIRST_QUEST = 24;
    GAMMA_WORLD = 25;
    GANGBUSTERS = 26;
    LEGEND_OF_THE_FIVE_RINGS = 27;
    MAGIC_THE_GATHERING = 28;
    MARVEL_SUPER_DICE = 29;
    MLB_SHOWDOWN_2002 = 30;
    MLB_SHOWDOWN_2003 = 31;
    MLB_SHOWDOWN = 32;
    NEOPETS = 33;
    ONE_ON_ONE = 34;
    POKEMON = 35;
    SAGA = 36;
    SPECIAL = 37;
    SPELLFIRE = 38;
    STAR_WARS_TCG = 39;
    STAR_WARS = 40;
    SUPER_ENDLESS_QUEST = 41;
    SWORD_AND_SORCERY = 42;
    TERROR_TRACKS = 43;
    TERROR_TRAX = 44;
    WILD_SPACE = 45;
    WORLD_WAR_II = 46;
    XXVC = 47;
    MARVEL_SUPER_HEROES = 48;
  }
  System system = 17;

  enum Audience
  {
    DM = 0;
    PLAYER = 1;
    ALL = 2;
    UNKNOWN = 3;
  }
  Audience audience = 18;

  enum Type
  {
    UNKNOWN_TYPE = 0;
    ACCESSORY = 1;
    ADVENTURE = 2;
    BOARD_GAME = 3;
    BOOSTER_PACK = 4;
    CALENDAR = 5;
    CAMPAIGN_EXPANSION = 6;
    CAMPAIGN_SETTING = 7;
    CARD_GAME = 8;
    CARDS_TYPE = 9;
    CATALOG = 10;
    COLLECTION = 11;
    COMICS = 12;
    COOKBOOK = 13;
    DICE = 14;
    ELECTRONIC_ACCESSORY = 15;
    GUIDE = 16;
    MAGAZINE = 17;
    MINIATURE = 18;
    MONSTER_COMPENDIUM = 19;
    NOVEL = 20;
    PROMOTION = 21;
    RULEBOOK = 22;
    RULES_SUPPLEMENT = 23;
    SOFTWARE = 24;
    SOURCEBOOK = 25;
    SPECIAL_BOOK = 26;
  }
  Type type = 19;

  enum Style
  {
    UNKNOWN_STYLE = 0;
    BOOKLET = 1;
    BOX = 2;
    CARDS_STYLE = 3;
    FLYER = 4;
    FOLDER = 5;
    HARDCOVER = 6;
    MAP = 7;
    MEDIUM_BOX = 8;
    PACK = 9;
    PAPERBACK = 10;
    POSTER = 11;
    SCREEN = 12;
    SHEETS = 13;
    SMALL_BOX = 14;
    SOFT_COVER = 15;
    STICKER = 16;
  }
  Style style = 20;
  string producer = 21;
  string volume = 22;
  string number = 23;
  repeated string series = 24;
  PriceProto price = 25;

  message Content
  {
    enum Part
    {
      UNKNOWN_PART = 0;
      BOARD = 1;
      BOOK = 2;
      BOOKLET = 3;
      BOX = 4;
      CARD = 5;
      CD = 6;
      COUNTER = 7;
      COVER = 8;
      DICE = 9;
      FLYER = 10;
      FOLDER = 11;
      GATEFOLD = 12;
      MAGNET = 13;
      MAP = 14;
      MINIATURE = 15;
      MISC = 16;
      OVERLAY = 17;
      PACK = 18;
      PAGE = 19;
      PLAYING_PIECE = 20;
      POSTER = 21;
      SCREEN = 22;
      SHEET = 23;
      STICKER = 24;
    }
    Part part = 1;
    string description = 2;
    int32 number = 3;
  }
  repeated Content content = 26;
  repeated string required_requirements = 27;
  repeated string optional_requirements = 28;

  enum Layout
  {
    UNKNOWN_LAYOUT = 0;
    FULL_COLOR = 1;
    FOUR_COLOR = 2;
    TWO_COLOR = 3;
    COLOR_COVER = 4;
    BLACK_AND_WHITE = 5;
    MIXED = 6;
  }
  Layout layout = 29;
}